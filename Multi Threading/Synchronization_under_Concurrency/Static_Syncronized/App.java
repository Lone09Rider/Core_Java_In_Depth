package Synchronization_under_Concurrency.Static_Syncronized;

class Brackets {

	// Can only work for one type of thread object multiple times not on 2 different
	// objects
	synchronized static public void genrate(String threadCode) {
		for (int i = 1; i <= 10; i++) {
			if (i <= 5) {
				System.out.print("[");
			} else {
				System.out.print("]");
			}
		}
		System.out.println("Generated by thread : "+threadCode);
	}
}

public class App {

	public static void main(String[] args) {
//		If You Run Get unwanted synchronization sometimes
//		* To Ignore it use only one object
//		* Or lock will be based on Class Directly

		

		new Thread(new Runnable() {

			@Override
			public void run() {

				for (int i = 1; i <= 5; i++) {
					Brackets.genrate("Thread 1");
				}

			}
		}).start();

		new Thread(new Runnable() {

			@Override
			public void run() {

				for (int i = 1; i <= 5; i++) {
					Brackets.genrate("Thread 2");
				}

			}
		}).start();

	}

}
